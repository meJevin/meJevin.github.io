{"version":3,"sources":["Components/Header.tsx","Components/Footer.tsx","Pages/HomePage.tsx","Pages/AboutPage.tsx","Models/Data.ts","Components/Project.tsx","Components/ProjectGroup.tsx","Pages/MyWorkPage.tsx","Pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","props","useLocation","useState","currentHashRoute","setCurrentHashRoute","document","location","hash","replace","isMenuOpen","setIsMenuOpen","menuButtonClass","setMenuButtonClass","menuNavClass","setMenuNavClass","menuClass","setMenuClass","menuBrandingClass","setMenuBrandingClass","navItemClass","setNavItemClass","toggleMenu","className","onClick","menuItems","map","menuItem","navClass","linkTo","to","newRoute","title","Footer","currentYear","setCurrentYear","useEffect","Date","getFullYear","id","HomePage","isShowingContacts","setIsShowingContacts","contactsClass","setContactsClass","contactsButtonClass","setContactsButtonClass","contactsIconClass","setContactsIconClass","href","AboutPage","mainClass","setMainClass","onMouseOver","easterEggMouseOver","onMouseLeave","easterEggMouseLeave","target","getProjects","a","result","push","categoryName","projectName","description","projectLink","tags","Project","descriptionClass","setDescriptionClass","infoButtonClass","setInfoButtonClass","onMouseEnter","project","aria-hidden","p","ProjectGroup","projectGroupClass","setProjectGroupClass","maxHeight","projectGroupStyle","setProjectGroupStyle","isButtonExpanded","setIsButtonExpanded","expandButtonClass","setExpandButtonClass","getExpandedHeight","finalContentHeight","content","getElementById","groupName","rowValues","defaultView","getComputedStyle","getPropertyValue","split","j","length","parseInt","addEventListener","handleResize","style","projects","MyWorkPage","Map","groupedProjects","setGroupedProjects","splitProjectsIntoGroups","fetchProjects","projectsMap","forEach","item","key","collection","get","set","resultJSXs","groupedProjectToJSXs","NotFoundPage","App","isOverlayVisible","setIsOverlayVisible","isShowingEasterEgg","setIsShowingEasterEgg","body","overlayClass","renderOverlay","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba32afe8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport interface MenuItem {\n    title: string;\n    linkTo: string;\n}\n\ninterface Props {\n    menuItems: MenuItem[];\n}\n\nconst Header: React.FC<Props> = (props) => {\n    \n    let location = useLocation();\n\n    let [currentHashRoute, setCurrentHashRoute] = useState(\"\");\n\n    currentHashRoute = document.location.hash.replace('#', '');\n\n    const [isMenuOpen, setIsMenuOpen] = useState(true);\n\n    const [menuButtonClass, setMenuButtonClass] = useState(\"menu-btn\");\n    const [menuNavClass, setMenuNavClass] = useState(\"menu-nav\");\n    const [menuClass, setMenuClass] = useState(\"menu\");\n    const [menuBrandingClass, setMenuBrandingClass] = useState(\"menu-branding\");\n    const [navItemClass, setNavItemClass] = useState(\"nav-item\");\n\n    const menuButtonClicked = () => {\n        toggleMenu();;\n    };\n\n    const toggleMenu = () => {\n        if (isMenuOpen) {\n            // Hide it\n            setIsMenuOpen(false);\n            setMenuButtonClass(\"menu-btn close\");\n            setMenuNavClass(\"menu-nav show\");\n            setMenuClass(\"menu show\");\n            setMenuBrandingClass(\"menu-branding show\");\n            setNavItemClass(\"nav-item show\");\n        }\n        else {\n            // Show it\n            setIsMenuOpen(true);\n            setMenuButtonClass(\"menu-btn\");\n            setMenuNavClass(\"menu-nav\");\n            setMenuClass(\"menu\");\n            setMenuBrandingClass(\"menu-branding\");\n            setNavItemClass(\"nav-item\");\n        }\n    };\n    \n    const handleMenuItemClick = (newRoute: string) => {\n        setCurrentHashRoute(newRoute);\n        toggleMenu();\n    };\n\n    return (\n        <header>\n            <div className={menuButtonClass} onClick={menuButtonClicked}>\n                <div className=\"btn-line\"></div>\n                <div className=\"btn-line\"></div>\n                <div className=\"btn-line\"></div>\n            </div>\n\n            <nav className={menuClass}>\n                <div className={menuBrandingClass}>\n                    <div className=\"portrait\"></div>\n                </div>\n\n                <ul className={menuNavClass}>\n                    {props.menuItems.map((menuItem) => {\n                        let navClass = navItemClass;\n\n                        if (currentHashRoute === menuItem.linkTo) {\n                            navClass += \" current\";\n                        }\n\n                        return (\n                            <li className={navClass} key={menuItem.title+\"_\"+menuItem.linkTo}>\n                                <Link className=\"nav-link\" to={menuItem.linkTo} \n                                        onClick={() => handleMenuItemClick(menuItem.linkTo)}>\n                                    {menuItem.title}\n                                </Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </nav>  \n        </header>  \n    );\n}\n\nexport default Header;","import React, { useState, useEffect } from 'react';\n\nconst Footer: React.FC = () => {\n\n    const [currentYear, setCurrentYear] = useState(-1);\n\n    useEffect(() => {\n        setCurrentYear(new Date().getFullYear());\n    }, []);\n\n    return (\n        <footer id=\"main-footer\">\n            Copyright &copy; {currentYear}\n        </footer>\n    );\n};\n\nexport default Footer;","import React, { useEffect, useState } from \"react\";\n\nconst HomePage: React.FC = () => {\n\n    const [isShowingContacts, setIsShowingContacts] = useState(false);\n\n    const [contactsClass, setContactsClass] = useState(\"contacts\");\n    const [contactsButtonClass, setContactsButtonClass] = useState(\"contact-info-button\");\n    const [contactsIconClass, setContactsIconClass] = useState(\"fa fa-chevron-right\");\n\n    useEffect(() => {\n        document.title = \"M. Naifield\";\n    }, []);\n\n    const handleContactsClick = () => {\n        if (isShowingContacts) {\n            setContactsClass(\"contacts\");\n            setContactsButtonClass(\"contact-info-button\");\n            setContactsIconClass(\"fa fa-chevron-right\");\n            setIsShowingContacts(false);\n        }\n        else {\n            setContactsClass(\"contacts show\");\n            setContactsButtonClass(\"contact-info-button show\");\n            setContactsIconClass(\"fa fa-chevron-right show\");\n            setIsShowingContacts(true);\n        }\n    };\n\n    return (\n        <main id=\"home\">\n            <h1 className=\"lg-heading\">\n                Michael&nbsp;\n                <span className=\"text-secondary\">Naifield</span>\n            </h1>\n\n            <h2 className=\"sm-heading\">\n                Software Developer for Windows, Android & iOS\n            </h2>\n\n            <div className=\"icons\">\n                <a href=\"https://github.com/meJevin\">\n                    <i className=\"fab fa-github fa-2x\"></i>\n                </a>\n                <a href=\"https://telegram.me/sssskeo\">\n                    <i className=\"fab fa-telegram fa-2x\"></i>\n                </a>\n                <a href=\"https://vk.com/sssskeo\">\n                    <i className=\"fab fa-vk fa-2x\"></i>\n                </a>\n                <a href=\"https://www.instagram.com/sssskeo\">\n                    <i className=\"fab fa-instagram fa-2x\"></i>\n                </a>\n            </div>\n\n            <div className=\"contact-info\">\n                <div className={contactsButtonClass} onClick={handleContactsClick}>\n                    <h2>\n                        Contact\n                    </h2>\n                    <i className={contactsIconClass}></i>\n                </div>\n\n                <div className={contactsClass}>\n                    <div>\n                        <i className=\"fas fa-phone-alt\"></i>\n                        <a href=\"tel:7-926-636-58-74\">+7 (926) 636-58-74</a>\n                    </div>\n                    <div>\n                        <i className=\"fas fa-envelope\"></i>\n                        <a href=\"mailto:mejevin@gmail.com\">mejevin@gmail.com</a>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n};\n\nexport default HomePage;","import React, { useEffect, useState } from \"react\";\n\ninterface Props {\n    easterEggMouseOver(): void;\n    easterEggMouseLeave(): void;\n}\n\nconst AboutPage: React.FC<Props> = (props) => {\n\n    const [mainClass, setMainClass] = useState(\"\");\n\n    useEffect(() => {\n        document.title = \"About me\";\n    }, []);\n\n    const handleEasterEggMouseOver = () => {\n        setMainClass(\"hide\");\n        \n        props.easterEggMouseOver();\n    };\n\n    const handleEasterEggMouseLeave = () => {\n        setMainClass(\"\");\n\n        props.easterEggMouseLeave();\n    };\n\n    return (\n        <main id=\"about\" className={mainClass}>\n            <h1 className=\"lg-heading\">\n            About&nbsp;\n            <span className=\"text-secondary\">Me</span>\n            </h1>\n    \n            <h2 className=\"sm-heading\">\n            Gonna try to keep it short, but won't promise anything!\n            </h2>\n    \n            <div className=\"about-info\">\n            <div className=\"bio-image\"></div>\n    \n            <div className=\"bio\">\n                <h2 className=\"text-secondary\">BIO & Job Experience</h2>\n    \n                <div className=\"bio-info\">\n                <div className=\"bio-1\">\n                    <br />\n                    My name is <span className=\"highlight\">Michael</span> and I'm a young\n                    software developer from <span className=\"highlight\">Russia</span>.\n                    <br /><br />\n                    I'm only in the beginning of my programming carrier, but already\n                    have a strong knowledge base of programming lanuages, frameworks,\n                    APIs & general computer architecture on different levels; starting\n                    from CPU registers and finishing with high-level software\n                    abstractions.\n                    <br /><br />\n                </div>\n    \n                <div className=\"bio-2\">\n                    I've worked with&nbsp;\n                    <span className=\"highlight\">C++</span>,&nbsp;\n                    <span className=\"highlight\">C#</span>,&nbsp;\n                    <span className=\"highlight\">Dart</span>,&nbsp;\n                    <span className=\"highlight\">HTML</span>,&nbsp;\n                    <span className=\"highlight\">CSS</span>,&nbsp;\n                    <span className=\"highlight\">JavaScript</span>, a little bit of\n                    low-level <span className=\"highlight\">C</span> and a touch of&nbsp;\n                    <span className=\"highlight\">Delphi</span> here and there in the past.\n                    <br /><br />\n                    Among the tools I've used are:&nbsp;\n                    <span className=\"highlight\">Unity3D</span>,&nbsp;\n                    <span className=\"highlight\">.NET</span>,&nbsp;\n                    <span className=\"highlight\">Qt</span>,&nbsp;\n                    <span className=\"highlight\">Lazarus</span>,&nbsp;\n                    <span className=\"highlight\">SQL</span>,&nbsp;\n                    <span className=\"highlight\">WPF</span>,&nbsp;\n                    <span className=\"highlight\">WinForms</span>,&nbsp;\n                    <span className=\"highlight\">Visual Studio</span>,&nbsp;\n                    <span className=\"highlight\">WinAPI</span>,&nbsp;\n                    <span className=\"highlight\">Xcode</span>,&nbsp;\n                    <span className=\"highlight\">SCSS</span>,&nbsp;\n                    <span className=\"highlight\">Xamarin Forms</span>,&nbsp;\n                    <span className=\"highlight\">ASP.NET</span>,&nbsp;\n                    <span className=\"highlight\">git</span>, and many-many more.\n                    <br /><br />\n                </div>\n    \n                <div className=\"bio-3\">\n                    I'm extremly enthusiastic to any kind of programming experience,\n                    because I truly enjoy what I do. Whether it be a web-site, mobile\n                    app, desktop app, a simple CLI tool or anything of that sort. That\n                    is why I'm open to any offers you throw at me. And being a\n                    dedicated, hard-working person that I am, I usually yield great\n                    results. I always try to stay on the bleeding edge of the modern\n                    programming world, learning new things, improving my knowledge in\n                    areas that I already know.\n                    <br /><br />\n                </div>\n    \n                <div className=\"bio-4\">\n                    Outside of programming I'm your average&nbsp;\n                    <span className=\"highlight-wow\">white-haired elf-looking guy</span>.\n                    Actually, that's&nbsp;\n                    <span className=\"hover-for-bg\" id=\"hover-for-bg-item\" onMouseOver={handleEasterEggMouseOver} onMouseLeave={handleEasterEggMouseLeave}>me</span> in the\n                    background. I really endore certain areas of&nbsp;\n                    <span className=\"highlight\">mathematics</span> &&nbsp;\n                    <span className=\"highlight\">physics</span>. <br/><br/> I enjoy editing videos adding varoious\n                    special FX via <span className=\"highlight\">Adobe After Effects</span> in my spare time.\n                    I also play <span className=\"highlight\">basketball</span> and <span className=\"highlight\">skateboard</span> a lot and\n                    I'm an amature <span className=\"highlight\">photographer</span>\n                    <br/>\n                </div>\n                </div>\n            </div>\n    \n            <div className=\"job job-1\">\n                <h3>\n                <a href=\"https://synteco.ru/\" target=\"_blank\">Synteco</a>\n                <span>2018-Now</span>\n                </h3>\n                <h6>Software developer</h6>\n                <p>\n                Right now I'm a Software Developer at Synteco. Working with medical\n                analyzers, I've delt with&nbsp;\n                <span className=\"highlight\">OpenCV</span> (<span className=\"highlight\">EmguCV</span>&nbsp;\n                on <span className=\"highlight\">C#</span>) while developing my own&nbsp;\n                <span className=\"highlight\">computer vision</span> algorithms (and\n                improving the old ones), <span className=\"highlight\">MySQL</span>,&nbsp;\n                <span className=\"highlight\">SQLite</span>, Accord.Neuro to further\n                improve my analyzing algorithms by throwing all the collected info\n                about subjects into a <span className=\"highlight\">nerual-net</span>,\n                Accord.Video.DirectShow for interactions with&nbsp;\n                <span className=\"highlight\">video-cameras</span>,&nbsp;\n                <span className=\"highlight\">WPF</span> and a lot of other stuff!\n                </p>\n            </div>\n            <div className=\"job job-2\">\n                <h3>\n                <a href=\"https://code-className.ru/\" target=\"_blank\">Code Class</a>\n                <span>2017-2018</span>\n                </h3>\n                <h6>Programming teacher</h6>\n                <p>\n                I've worked as a programming teacher for a little while. I was\n                giving courses on <span className=\"highlight\">C#</span> and&nbsp;\n                <span className=\"highlight\">Unity</span> to kids and teens from 10 years\n                all the way up to 18 years old. I was the youngest teacher in the\n                company at the time, but I was doing really well and taught a lot of\n                people new things. Because I was so young my students really liked\n                me and were really into the topics I taught. Would say that I\n                acquired a lot of knowledge there related to programming. But if was\n                a cool experience teaching people things that I love to play around\n                with\n                </p>\n            </div>\n            </div>\n        </main>        \n    )\n};\n\nexport default AboutPage;","import ProjectModel from './ProjectModel';\n\nexport const getProjects = async (): Promise<ProjectModel[]> => {\n   let result: ProjectModel[] = [];\n\n   result.push({\n      categoryName: 'Delphi',\n      projectName: 'Screen Cropper',\n      description: 'A screenshot taking program I made for myself a while back with Delhpi for Windows.',\n      projectLink: 'https://github.com/meJevin/Screen-Cropper',\n      tags: [\"Delphi\", \"Lazarus\", \"WinForms\", \"WinAPI\", \"Dektop\"]\n   });\n\n   result.push({\n      categoryName: 'Delphi',\n      projectName: 'Key Logger',\n      description: 'My attempt on creating a key logger. Every programmer has to make one of these, come on...',\n      projectLink: 'https://github.com/meJevin/Simple-Key-Logger',\n      tags: [\n        \"Delphi\",\n        \"Lazarus\",\n        \"WinForms\",\n        \"WinAPI\",\n        \"Dektop\",\n        \"WinSocks\",\n        \"Indy10\",\n        \"Client-Server\"\n      ]\n   });\n\n   result.push({\n      categoryName: 'Delphi',\n      projectName: 'PV Input',\n      description: 'Application that monitors user keyboard input. I made it for myself to record input history while in-game',\n      projectLink: 'https://github.com/meJevin/PVInput',\n      tags: [\"Delphi\", \"Lazarus\", \"WinForms\", \"WinAPI\", \"Dektop\"]\n   });\n\n   result.push({\n      categoryName: 'C#',\n      projectName: 'Lounge Radio',\n      description: 'An application that streams radio station audio via HTTP. Works on iOS and Anroid via Xamarin.Forms',\n      projectLink: 'https://github.com/meJevin/LRadio',\n      tags: [\"C#\", \"Mobile\", \"iOS\", \"Anroid\", \"Xamarin.Forms\"]\n   });\n\n   result.push({\n      categoryName: 'C#',\n      projectName: 'Lounge Radio',\n      description: 'An application that streams radio station audio via HTTP. Works on iOS and Anroid via Xamarin.Forms',\n      projectLink: 'https://github.com/meJevin/LRadio',\n      tags: [\"C#\", \"Mobile\", \"iOS\", \"Anroid\", \"Xamarin.Forms\"]\n   });\n\n   result.push({\n      categoryName: 'C#',\n      projectName: 'Philter',\n      description: 'App that help promote some business related to cannabis. It was made with Unity3D for iOS and Anroid and has a really complex and buitiful UI',\n      projectLink: 'https://github.com/meJevin/Philter',\n      tags: [\"C#\", \"Unity3D\", \"REST\", \"iOS\", \"Android\", \"JSON\", \"Mobile\"]\n   });\n\n   result.push({\n      categoryName: 'C#',\n      projectName: 'Screen Cropper',\n      description: 'A C# port of my screenshor taking program originally written in Delphi',\n      projectLink: 'https://github.com/meJevin/ScreenCropperCSharp',\n      tags: [\"C#\", \"WinForms\", \"WinAPI\", \"Windows\"]\n   });\n\n   result.push({\n      categoryName: 'Web',\n      projectName: 'My website',\n      description: 'Literally a website you are currently on. Powered by React, TypeScript, and SCSS',\n      projectLink: 'https://github.com/meJevin/meJevin.github.io',\n      tags: [\"Web\", \"HTML5\", \"CSS3\", \"SCSS\", \"TypeScript\", \"React\"]\n   });\n\n   result.push({\n      categoryName: 'Dart',\n      projectName: 'PV Weather',\n      description: 'A simple and clean cross-platform Weather app built using Flutter, OpenWeatherAPI and Firebase',\n      projectLink: 'https://github.com/meJevin/PVWeather',\n      tags: [\"Dart\", \"Flutter\", \"REST\", \"Firebase\", \"NoSQL\", \"Reactive\", \"iOS\", \"Android\"]\n   });\n\n   return result;\n};","import React, { useState } from 'react';\n\nimport ProjectModel from '../Models/ProjectModel';\n\ninterface Props {\n    project: ProjectModel;\n}\n\nconst Project: React.FC<Props> = (props) => {\n\n    const [descriptionClass, setDescriptionClass] = useState(\"item-description\");\n    const [infoButtonClass, setInfoButtonClass] = useState(\"info-icon\");\n\n    const handleMouseEnter = () => {\n        setInfoButtonClass(\"info-icon revealed\");\n    };\n    const handleMouseLeave = () => {\n        setInfoButtonClass(\"info-icon\");\n    };\n\n\n    const handleInfoButtonMouseEnter = () => {\n        setDescriptionClass(\"item-description show\");\n        setInfoButtonClass(\"info-icon revealed show\");\n    };\n    const handleInfoButtonMouseLeave = () => {\n        setDescriptionClass(\"item-description\");\n        setInfoButtonClass(\"info-icon revealed\");\n    };\n\n\n    return (\n        <div className=\"item\"\n             onMouseEnter={handleMouseEnter}\n             onMouseLeave={handleMouseLeave}>\n            <div className={descriptionClass}>\n                <h3>{props.project.description}</h3>\n            </div>\n            <div className={infoButtonClass}\n                 onMouseEnter={handleInfoButtonMouseEnter}\n                 onMouseLeave={handleInfoButtonMouseLeave}>\n                <i className=\"fas fa-info\" aria-hidden=\"true\"></i>\n            </div>\n            <div className=\"item-name-container\">\n                <a href={props.project.projectLink} target=\"_blank\" className=\"btn-dark\">\n                    <i className=\"fab fa-github\" aria-hidden=\"true\"></i>\n                    <div className=\"project-name-text\">{props.project.projectName}</div>\n                </a>\n            </div>\n            <div className=\"tag-container\">\n                {props.project.tags.map(p => {\n                    return (\n                        <div className=\"item-tag\">\n                            <h3>{p}</h3>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    )\n};\n\nexport default Project;","import React, { useState, CSSProperties, useEffect } from 'react';\n\nimport ProjectModel from '../Models/ProjectModel';\n\nimport Project from './Project';\n\ninterface Props {\n    projects: ProjectModel[];\n    groupName: string;\n}\n\nconst ProjectGroup: React.FC<Props> =  (props) => {\n\n    const [projectGroupClass, setProjectGroupClass] = useState(\"project-group-content\");\n    const [projectGroupStyle, setProjectGroupStyle] = useState<CSSProperties>({\n        maxHeight: \"0px\",\n    });\n\n    const [isButtonExpanded, setIsButtonExpanded] = useState(false);\n    const [expandButtonClass, setExpandButtonClass] = useState(\"project-group-expand-btn\");\n\n    const handleExpandButtonClick = () => {\n        if (!isButtonExpanded) {\n            setIsButtonExpanded(true);\n            setExpandButtonClass(\"project-group-expand-btn expanded\");\n            setProjectGroupClass(\"project-group-content show\");\n            setProjectGroupStyle({\n                maxHeight: getExpandedHeight() + \"px\",\n            });\n            // Max height calculation is fake!\n        }\n        else {\n            setIsButtonExpanded(false);\n            setExpandButtonClass(\"project-group-expand-btn\");\n            setProjectGroupClass(\"project-group-content\");\n            setProjectGroupStyle({\n                maxHeight: \"0px\",\n            });\n        }\n    };\n\n    const getExpandedHeight = (): number => {\n        let finalContentHeight = 0;\n\n        let content = document.getElementById(props.groupName);\n\n        if (content) {\n            let rowValues = document.defaultView?.getComputedStyle(content, \"\")\n            .getPropertyValue(\"grid-template-rows\")\n            .split(\" \");\n\n            if (rowValues) {\n                for (let j = 0; j < rowValues.length; ++j) {\n                    finalContentHeight += parseInt(rowValues[j].replace(\"px\", \"\"));\n                }\n            }\n        }\n        return finalContentHeight;\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"resize\", handleResize);\n    }, []);\n\n    const handleResize = () => {\n        if (isButtonExpanded) {\n            setProjectGroupStyle({\n                maxHeight: getExpandedHeight() + \"px\",\n            });\n        }\n    };\n\n    return (\n        <div>\n            <button className={expandButtonClass}\n                    onClick={handleExpandButtonClick}>\n                <h3>{props.groupName}</h3>\n            </button>\n\n            <div className={projectGroupClass} style={projectGroupStyle} id={props.groupName}>\n                {props.projects.map((p) => {\n                    return (\n                        <Project project={p}/>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectGroup;","import React, { useEffect, useState } from \"react\";\n\nimport ProjectModel from './../Models/ProjectModel';\nimport { getProjects } from '../Models/Data';\n\nimport ProjectGroup from './../Components/ProjectGroup';\n\nconst MyWorkPage: React.FC = () => {\n\n    const [groupedProjects, setGroupedProjects] = useState<Map<string, ProjectModel[]>>(\n        new Map<string, ProjectModel[]>()\n    );\n\n    useEffect(() => {\n        document.title = \"My Work\";\n\n        // This is static for now, but if I decide to make this fetch data from\n        // some backend this is here :)\n        const fetchProjects = async () => {\n            var result = await getProjects();\n\n            setGroupedProjects(splitProjectsIntoGroups(result));\n        };\n\n        fetchProjects();\n    }, []);\n\n    const splitProjectsIntoGroups = (projects: ProjectModel[]): Map<string, ProjectModel[]> => {\n        let projectsMap = new Map<string, ProjectModel[]>();\n\n        projects.forEach((item) => {\n            const key = item.categoryName;\n            const collection = projectsMap.get(key);\n\n            if (!collection) {\n                projectsMap.set(key, [item]);\n            }\n            else {\n                collection.push(item);\n            }\n        });\n\n        return projectsMap;\n    }\n\n    const groupedProjectToJSXs = () => {\n        let resultJSXs: JSX.Element[] = [];\n\n        groupedProjects.forEach((item, key) => {\n            resultJSXs.push((\n                <ProjectGroup groupName={key} projects={item}/>\n            ));\n        });\n\n        return resultJSXs;\n    };\n\n    return (\n        <main id=\"work\">\n            <h1 className=\"lg-heading\">\n                My&nbsp;\n                <span className=\"text-secondary\">Work</span>\n            </h1>\n\n            <h2 className=\"sm-heading\">\n                Check out some of my projects in different programming languages!\n            </h2>\n\n            <div className=\"projects\">\n                <div className=\"project-group\">\n                    {groupedProjectToJSXs()}\n                </div>\n            </div>\n        </main>\n    )\n};\n\nexport default MyWorkPage;","import React from \"react\";\n\nconst NotFoundPage: React.FC = () => {\n    return (\n        <h1>\n            Not found :(\n        </h1>\n    )\n};\n\nexport default NotFoundPage;","import React, { Fragment, useEffect, useState } from 'react';\nimport { Route, Switch, useLocation } from 'react-router';\n\nimport { MenuItem } from './Components/Header';\n\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\n\nimport HomePage from './Pages/HomePage';\nimport AboutPage from './Pages/AboutPage';\nimport MyWorkPage from './Pages/MyWorkPage';\nimport NotFoundPage from './Pages/NotFoundPage';\n\nconst App: React.FC = () => {\n\n  let location = useLocation();\n\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\n\n  const [isShowingEasterEgg, setIsShowingEasterEgg] = useState(false);\n\n  useEffect(() => {\n    if (document.location.hash === \"#/about\") {\n      document.body.id = \"bg-img-about\";\n      setIsOverlayVisible(true);\n    }\n    else {\n      document.body.id = \"bg-img\";\n      setIsOverlayVisible(false);\n    }\n  });\n\n  const headerMenuItems: MenuItem[] = [\n    {\n      title: \"Home\",\n      linkTo: \"/\",\n    },\n    {\n      title: \"About Me\",\n      linkTo: \"/about\",\n    },\n    {\n      title: \"My Work\",\n      linkTo: \"/work\",\n    },\n  ];\n\n  const handleEasterEggMouseOver = () => {\n    setIsShowingEasterEgg(true);\n  };\n\n  const handleEasterEggMouseLeave = () => {\n    setIsShowingEasterEgg(false);\n  };\n\n  const renderOverlay = () => {\n    let overlayClass = \"overlay\";\n\n    if (isShowingEasterEgg) {\n      overlayClass += \" hide\";\n    }\n\n    if (isOverlayVisible) {\n      return (\n        <div className={overlayClass}>\n\n        </div>\n      );\n    }\n\n    return <Fragment/>\n  };\n\n  return (\n    <Fragment>\n      {renderOverlay()}\n\n      <Header menuItems={headerMenuItems}/>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage/>\n        </Route>\n\n        <Route exact path=\"/about\">\n          <AboutPage \n            easterEggMouseOver={handleEasterEggMouseOver} \n            easterEggMouseLeave={handleEasterEggMouseLeave}/>\n        </Route>\n\n        <Route exact path=\"/work\">\n          <MyWorkPage/>\n        </Route>\n\n        <Route>\n          <NotFoundPage/>\n        </Route>\n      </Switch>\n\n      <Footer/>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './css/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App/>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}